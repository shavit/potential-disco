/*
 * This C++ source file was generated by the Gradle 'init' task.
 */

#include <iostream>
#include <stdlib.h>
#include "app.h"

#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <sys/socket.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>

std::string sniffer::Greeter::greeting() {
    return std::string("Hello, World!");
}

int raw_sniff() {
  int i, recv_length, sockfd;
  u_char buf[10000];

  if ((sockfd = socket(PF_INET, SOCK_RAW, IPPROTO_TCP)) == -1) {
    return -1;
  }

  for (i=0; i<40; i++) {
        recv_length = recv(sockfd, buf, 6000, 0);
        printf("Received %d byte packet\n", recv_length);
	printf("\t%s\n", buf);
	//        dump(buf, recv_length);
  }

  return 0;
}

int main () {
    // sniffer::Greeter greeter;    
    // std::cout << greeter.greeting() << std::endl;
  int err = 0;

  err = raw_sniff();

  if (err != 0) {    
        printf("Error: %d\n", err);
  }
  
    return err;
}
